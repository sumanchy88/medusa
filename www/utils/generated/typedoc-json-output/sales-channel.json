{
	"id": 11505,
	"name": "sales-channel",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 11632,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 11633,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 11644,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 11634,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11635,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11636,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 11637,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 11638,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 11639,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 11640,
											"name": "K",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ASC"
											},
											{
												"type": "literal",
												"value": "DESC"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 11641,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11642,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 11643,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11633,
						11634,
						11635,
						11636,
						11637,
						11641,
						11642,
						11643
					]
				}
			],
			"typeParameters": [
				{
					"id": 11644,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 11693,
			"name": "MetadataType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 11694,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 11695,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11694,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11697,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 11697,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 11696,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11694,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11697,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 11697,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11695,
						11696
					]
				}
			],
			"typeParameters": [
				{
					"id": 11697,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 11619,
					"name": "FilterableSalesChannelProps"
				}
			]
		},
		{
			"id": 11645,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 11646,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11647,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11646
					]
				}
			],
			"typeParameters": [
				{
					"id": 11647,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 11648,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 11649,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11650,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11649
					]
				}
			],
			"typeParameters": [
				{
					"id": 11650,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 11759,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 11760,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 11761,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										11761
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 11753,
			"name": "MessageBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 11758,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 11754,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 11755,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11756,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 11759,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 11757,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 11758,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								11755,
								11756,
								11757
							]
						}
					]
				}
			}
		},
		{
			"id": 11721,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 11724,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 11753,
						"typeArguments": [
							{
								"type": "reference",
								"target": 11724,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "MessageBody",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 11722,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 11723,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										11723
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 11731,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 11740,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 11732,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 11733,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11734,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 11740,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 11735,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11736,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11737,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11738,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11595,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 11739,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								11733,
								11734,
								11735,
								11736,
								11737,
								11738,
								11739
							]
						}
					]
				}
			}
		},
		{
			"id": 11744,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 11745,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 11746,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11747,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11748,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11749,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11750,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 11751,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 11752,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								11746,
								11747,
								11748,
								11749,
								11750,
								11751,
								11752
							]
						}
					]
				}
			}
		},
		{
			"id": 11741,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 11742,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 11743,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11742,
						11743
					]
				}
			]
		},
		{
			"id": 11698,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 11699,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11700,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 11741,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 11741,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 11701,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 11702,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 11703,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 11704,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														11703,
														11704
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 11705,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 11706,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11744,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 11707,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 11708,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 11709,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 11710,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 11744,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											11709,
											11710
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 11711,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11699,
						11700,
						11701,
						11705,
						11706,
						11707,
						11711
					]
				}
			]
		},
		{
			"id": 11715,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 11716,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 11717,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 11718,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11719,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 11720,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										11717,
										11718,
										11719,
										11720
									]
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 11651,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 11698,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 11652,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 11653,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11654,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11712,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11655,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 11656,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 11657,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 11658,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 11659,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 11660,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 11661,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 11662,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							11660,
																							11661,
																							11662
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 11663,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 11712,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															11657,
															11658,
															11663
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 11664,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11665,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11666,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 11667,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 11668,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 11669,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11670,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 11671,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 11672,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 11673,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 11674,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 11715,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														11672,
														11673,
														11674
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										11653,
										11654,
										11655,
										11664,
										11665,
										11666,
										11667,
										11668,
										11669,
										11670
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 11712,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 11744,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 11713,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 11714,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										11714
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 11577,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"extendedBy": [
				{
					"type": "reference",
					"target": 11506,
					"name": "ISalesChannelModuleService"
				}
			]
		},
		{
			"id": 11689,
			"name": "SalesChannelLocationDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The sales channel location details."
					}
				]
			},
			"children": [
				{
					"id": 11690,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated sales channel's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11691,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated location's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11692,
					"name": "sales_channel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated sales channel."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 11607,
						"name": "SalesChannelDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11690,
						11691,
						11692
					]
				}
			]
		},
		{
			"id": 11607,
			"name": "SalesChannelDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The sales channel details."
					}
				]
			},
			"children": [
				{
					"id": 11608,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11609,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11610,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the sales channel."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11611,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the sales channel is disabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11612,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 11613,
					"name": "locations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The locations of the sales channel."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 11689,
							"name": "SalesChannelLocationDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11608,
						11609,
						11610,
						11611,
						11612,
						11613
					]
				}
			]
		},
		{
			"id": 11619,
			"name": "FilterableSalesChannelProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved sales channel."
					}
				]
			},
			"children": [
				{
					"id": 11624,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11619,
									"name": "FilterableSalesChannelProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 11694,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11619,
											"name": "FilterableSalesChannelProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11695,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 11625,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 11619,
									"name": "FilterableSalesChannelProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 11694,
									"typeArguments": [
										{
											"type": "reference",
											"target": 11619,
											"name": "FilterableSalesChannelProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 11696,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 11620,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Find sales channels by their name or description through this search term."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11621,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the sales channel by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 11622,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter sales channels by their names."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 11623,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter sales channels by whether they're disabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11624,
						11625,
						11620,
						11621,
						11622,
						11623
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 11694,
					"typeArguments": [
						{
							"type": "reference",
							"target": 11619,
							"name": "FilterableSalesChannelProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11591,
			"name": "CreateSalesChannelDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The sales channel to be created."
					}
				]
			},
			"children": [
				{
					"id": 11592,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11593,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the sales channel."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11594,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the sales channel is disabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11592,
						11593,
						11594
					]
				}
			]
		},
		{
			"id": 11614,
			"name": "UpdateSalesChannelDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the sales channel."
					}
				]
			},
			"children": [
				{
					"id": 11615,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11616,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the sales channel."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11617,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the sales channel is disabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11618,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 11693,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11615,
						11616,
						11617,
						11618
					]
				}
			]
		},
		{
			"id": 11626,
			"name": "UpsertSalesChannelDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes in the sales channel to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 11627,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11628,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sales channel. Required\nwhen creating a sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11629,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the sales channel."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 11630,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the sales channel is disabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11631,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 11693,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11627,
						11628,
						11629,
						11630,
						11631
					]
				}
			]
		},
		{
			"id": 11506,
			"name": "ISalesChannelModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Sales Channel Module."
					}
				]
			},
			"children": [
				{
					"id": 11507,
					"name": "createSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11508,
							"name": "createSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates sales channels."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created sales channels."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst salesChannels = await salesChannelModuleService.createSalesChannels([\n  {\n    name: \"B2B\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11509,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The sales channels to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11591,
											"name": "CreateSalesChannelDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11510,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11595,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11607,
											"name": "SalesChannelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11511,
							"name": "createSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a sales channel."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created sales channel."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst salesChannel = await salesChannelModuleService.createSalesChannels({\n  name: \"B2B\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11512,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The sales channel to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11591,
										"name": "CreateSalesChannelDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11513,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11595,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11607,
										"name": "SalesChannelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11514,
					"name": "updateSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11515,
							"name": "updateSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing sales channel."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated sales channel."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst salesChannel = await salesChannelModuleService.updateSalesChannels(\n  \"sc_123\",\n  {\n    description: \"Sales channel for B2B customers\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11516,
									"name": "channelId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The sales channel's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11517,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the sales channel."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11614,
										"name": "UpdateSalesChannelDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11518,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11595,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11607,
										"name": "SalesChannelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11519,
							"name": "updateSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing sales channels matching the specified filters"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated sales channels."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst salesChannels = await salesChannelModuleService.updateSalesChannels(\n  {\n    name: \"B2B\",\n  },\n  {\n    description: \"Sales channel for B2B customers\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11520,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which sales channels to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11619,
										"name": "FilterableSalesChannelProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11521,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the sales channel."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11614,
										"name": "UpdateSalesChannelDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11522,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11595,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11607,
											"name": "SalesChannelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11523,
					"name": "upsertSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11524,
							"name": "upsertSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates a sales channel if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated sales channel."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst salesChannel = await salesChannelModuleService.upsertSalesChannels({\n  name: \"B2B\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11525,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the sales channel to be created or updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11626,
										"name": "UpsertSalesChannelDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11526,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11595,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11607,
										"name": "SalesChannelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11527,
							"name": "upsertSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates sales channels if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated sales channels."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst salesChannels = await salesChannelModuleService.upsertSalesChannels([\n  {\n    name: \"B2B\",\n  },\n  {\n    id: \"sc_123\",\n    description: \"Sales channel for B2B customers\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11528,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the sales channels to be created or updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11626,
											"name": "UpsertSalesChannelDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11529,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11595,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11607,
											"name": "SalesChannelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11530,
					"name": "deleteSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11531,
							"name": "deleteSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes sales channel by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the sales channels are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait salesChannelModuleService.deleteSalesChannels([\"sc_123\", \"sc_321\"])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11532,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the sales channel."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11533,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11595,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11534,
							"name": "deleteSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a sales channel by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the sales channel is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait salesChannelModuleService.deleteSalesChannels(\"sc_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11535,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the sales channel."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11536,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11595,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11537,
					"name": "retrieveSalesChannel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11538,
							"name": "retrieveSalesChannel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a sales channel by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved sales channel."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst salesChannel =\n  await salesChannelModuleService.retrieveSalesChannel(\"sc_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11539,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the sales channel."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11540,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the sales channel is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a sales channel."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11607,
												"name": "SalesChannelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11541,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11595,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11607,
										"name": "SalesChannelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11542,
					"name": "listSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11543,
							"name": "listSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of sales channels based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of sales channels."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of sales channels using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst salesChannels = await salesChannelModuleService.listSalesChannels({\n  id: [\"sc_123\", \"sc_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst salesChannels = await salesChannelModuleService.listSalesChannels(\n  {\n    id: [\"sc_123\", \"sc_321\"],\n  },\n  {\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11544,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved sales channels."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11619,
										"name": "FilterableSalesChannelProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11545,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the sales channel is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a sales channel."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11607,
												"name": "SalesChannelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11546,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11595,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11607,
											"name": "SalesChannelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11547,
					"name": "listAndCountSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11548,
							"name": "listAndCountSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of sales channels along with the total count of available sales channels satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of sales channels along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of sales channels using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [salesChannels, count] =\n  await salesChannelModuleService.listAndCountSalesChannels({\n    id: [\"sc_123\", \"sc_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [salesChannels, count] =\n  await salesChannelModuleService.listAndCountSalesChannels(\n    {\n      id: [\"sc_123\", \"sc_321\"],\n    },\n    {\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11549,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved sales channels."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11619,
										"name": "FilterableSalesChannelProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11550,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the sales channel is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a sales channel."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11632,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11607,
												"name": "SalesChannelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11551,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11595,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 11607,
													"name": "SalesChannelDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11552,
					"name": "softDeleteSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11553,
							"name": "softDeleteSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes sales channels by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait salesChannelModuleService.softDeleteSalesChannels([\"sc_123\", \"sc_321\"])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 11554,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11555,
									"name": "salesChannelIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The sales channels' ID."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11556,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11645,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11554,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11557,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11595,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11558,
					"name": "restoreSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11559,
							"name": "restoreSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores a soft deleted sales channel by its IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait salesChannelModuleService.restoreSalesChannels([\"sc_123\", \"sc_321\"])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 11560,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11561,
									"name": "salesChannelIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of {summary}"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11562,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the sales channel. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the sales channel's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11648,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11560,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11563,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11595,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						11507,
						11514,
						11523,
						11530,
						11537,
						11542,
						11547,
						11552,
						11558
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 11577,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 11725,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 11726,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 11727,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 11728,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 11729,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 11730,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11726,
						11727
					]
				}
			]
		},
		{
			"id": 11675,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 11676,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11677,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 11678,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 11721,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 11721,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 11679,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11680,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 11681,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 11725,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11721,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11682,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11683,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 11684,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11685,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 11686,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 11687,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 11731,
												"typeArguments": [
													{
														"type": "reference",
														"target": 11686,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 11731,
													"typeArguments": [
														{
															"type": "reference",
															"target": 11686,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 11688,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						11676,
						11679,
						11682,
						11684
					]
				}
			]
		},
		{
			"id": 11595,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 11596,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 11597,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 11606,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 11598,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 11606,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 11599,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11600,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11601,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11602,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11603,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 11675,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 11604,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11605,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11596,
						11597,
						11598,
						11599,
						11600,
						11601,
						11602,
						11603,
						11604,
						11605
					]
				}
			],
			"typeParameters": [
				{
					"id": 11606,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				11632,
				11694,
				11645,
				11648,
				11741,
				11698,
				11577,
				11689,
				11607,
				11619,
				11591,
				11614,
				11626,
				11506,
				11725,
				11675,
				11595
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				11693,
				11759,
				11753,
				11721,
				11731,
				11744,
				11715,
				11651,
				11712
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"11505": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": ""
		},
		"11506": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService"
		},
		"11507": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.createSalesChannels"
		},
		"11508": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.createSalesChannels"
		},
		"11509": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"11510": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11511": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.createSalesChannels"
		},
		"11512": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"11513": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11514": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.updateSalesChannels"
		},
		"11515": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.updateSalesChannels"
		},
		"11516": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "channelId"
		},
		"11517": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"11518": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11519": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.updateSalesChannels"
		},
		"11520": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "selector"
		},
		"11521": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"11522": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11523": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.upsertSalesChannels"
		},
		"11524": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.upsertSalesChannels"
		},
		"11525": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"11526": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11527": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.upsertSalesChannels"
		},
		"11528": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"11529": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11530": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.deleteSalesChannels"
		},
		"11531": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.deleteSalesChannels"
		},
		"11532": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ids"
		},
		"11533": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11534": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.deleteSalesChannels"
		},
		"11535": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "id"
		},
		"11536": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11537": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.retrieveSalesChannel"
		},
		"11538": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.retrieveSalesChannel"
		},
		"11539": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "id"
		},
		"11540": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "config"
		},
		"11541": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11542": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.listSalesChannels"
		},
		"11543": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.listSalesChannels"
		},
		"11544": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "filters"
		},
		"11545": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "config"
		},
		"11546": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11547": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.listAndCountSalesChannels"
		},
		"11548": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.listAndCountSalesChannels"
		},
		"11549": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "filters"
		},
		"11550": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "config"
		},
		"11551": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11552": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.softDeleteSalesChannels"
		},
		"11553": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.softDeleteSalesChannels"
		},
		"11554": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11555": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "salesChannelIds"
		},
		"11556": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "config"
		},
		"11557": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11558": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.restoreSalesChannels"
		},
		"11559": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.restoreSalesChannels"
		},
		"11560": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11561": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "salesChannelIds"
		},
		"11562": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "config"
		},
		"11563": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11577": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"11591": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "CreateSalesChannelDTO"
		},
		"11592": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "CreateSalesChannelDTO.name"
		},
		"11593": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "CreateSalesChannelDTO.description"
		},
		"11594": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "CreateSalesChannelDTO.is_disabled"
		},
		"11595": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"11596": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"11597": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"11598": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"11599": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"11600": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"11601": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"11602": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"11603": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"11604": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"11605": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"11606": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"11607": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO"
		},
		"11608": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.id"
		},
		"11609": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.name"
		},
		"11610": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.description"
		},
		"11611": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.is_disabled"
		},
		"11612": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.metadata"
		},
		"11613": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.locations"
		},
		"11614": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpdateSalesChannelDTO"
		},
		"11615": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpdateSalesChannelDTO.name"
		},
		"11616": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpdateSalesChannelDTO.description"
		},
		"11617": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpdateSalesChannelDTO.is_disabled"
		},
		"11618": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpdateSalesChannelDTO.metadata"
		},
		"11619": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "FilterableSalesChannelProps"
		},
		"11620": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "FilterableSalesChannelProps.q"
		},
		"11621": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "FilterableSalesChannelProps.id"
		},
		"11622": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "FilterableSalesChannelProps.name"
		},
		"11623": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "FilterableSalesChannelProps.is_disabled"
		},
		"11624": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"11625": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"11626": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO"
		},
		"11627": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO.id"
		},
		"11628": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO.name"
		},
		"11629": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO.description"
		},
		"11630": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO.is_disabled"
		},
		"11631": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO.metadata"
		},
		"11632": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"11633": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"11634": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"11635": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"11636": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"11637": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"11638": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"11639": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"11641": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"11642": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"11643": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"11644": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"11645": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"11646": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"11647": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11648": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"11649": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"11650": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11651": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"11652": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11653": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"11654": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"11655": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"11656": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11657": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"11658": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"11659": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11660": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"11661": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"11662": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"11663": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"11664": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"11665": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"11666": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"11667": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"11668": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"11669": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"11670": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"11671": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11672": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"11673": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"11674": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"11675": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"11676": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"11677": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"11678": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"11679": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"11680": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"11681": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"11682": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"11683": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"11684": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"11685": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"11686": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"11687": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"11688": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"11689": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO"
		},
		"11690": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO.sales_channel_id"
		},
		"11691": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO.location_id"
		},
		"11692": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO.sales_channel"
		},
		"11693": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "MetadataType"
		},
		"11694": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"11695": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"11696": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"11697": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"11698": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"11699": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"11700": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"11701": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"11702": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"11703": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"11704": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"11705": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"11706": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"11707": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"11708": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"11709": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"11710": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"11711": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"11712": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"11713": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11714": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"11715": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"11716": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"11717": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"11718": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"11719": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"11720": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"11721": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"11722": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"11723": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"11724": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"11725": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"11726": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"11727": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"11728": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"11729": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"11731": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"11732": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"11733": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"11734": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"11735": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"11736": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"11737": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"11738": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"11739": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"11740": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"11741": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"11742": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"11743": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"11744": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"11745": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"11746": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"11747": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"11748": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"11749": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"11750": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"11751": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"11752": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"11753": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "MessageBody"
		},
		"11754": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"11755": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"11756": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"11757": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"11758": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"11759": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"11760": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"11761": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/sales-channel/service.ts"
		},
		"reflections": {
			"1": 11505
		}
	}
}